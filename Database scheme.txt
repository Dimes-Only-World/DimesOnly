-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.commission_payouts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  payment_id uuid,
  commission_type character varying NOT NULL,
  amount numeric NOT NULL,
  payout_status character varying DEFAULT 'pending'::character varying,
  paypal_payout_batch_id character varying,
  paypal_payout_item_id character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT commission_payouts_pkey PRIMARY KEY (id),
  CONSTRAINT commission_payouts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT commission_payouts_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.payments(id)
);
CREATE TABLE public.content_access_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  access_type character varying NOT NULL CHECK (access_type::text = ANY (ARRAY['silver'::character varying, 'gold'::character varying]::text[])),
  payment_amount numeric NOT NULL,
  payment_method character varying DEFAULT 'paypal'::character varying,
  paypal_order_id character varying,
  paypal_payment_id character varying,
  payment_status character varying DEFAULT 'pending'::character varying,
  access_granted_at timestamp with time zone,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT content_access_payments_pkey PRIMARY KEY (id),
  CONSTRAINT content_access_payments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.direct_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sender_id uuid,
  recipient_id uuid,
  message text NOT NULL,
  is_read boolean DEFAULT false,
  is_admin_message boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone DEFAULT (now() + '3 days'::interval),
  liked_by uuid,
  CONSTRAINT direct_messages_pkey PRIMARY KEY (id),
  CONSTRAINT direct_messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id),
  CONSTRAINT direct_messages_recipient_id_fkey FOREIGN KEY (recipient_id) REFERENCES public.users(id),
  CONSTRAINT direct_messages_liked_by_fkey FOREIGN KEY (liked_by) REFERENCES public.users(id)
);
CREATE TABLE public.elite_memberships (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['monthly_active'::text, 'lifetime'::text, 'canceled'::text])),
  months_paid_count integer NOT NULL DEFAULT 0,
  started_at timestamp with time zone DEFAULT now(),
  last_payment_at timestamp with time zone,
  lifetime_granted_at timestamp with time zone,
  seat_number integer,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT elite_memberships_pkey PRIMARY KEY (id),
  CONSTRAINT elite_memberships_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.entries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  description text,
  amount numeric,
  created_at timestamp with time zone DEFAULT now(),
  user_id uuid,
  CONSTRAINT entries_pkey PRIMARY KEY (id),
  CONSTRAINT entries_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  date timestamp with time zone NOT NULL,
  location text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  start_time text,
  end_time text,
  address text,
  city text,
  state text,
  photo_url text,
  video_urls ARRAY,
  additional_photos ARRAY,
  genre text DEFAULT 'Nightlife'::text,
  price numeric DEFAULT 0,
  free_spots_strippers integer DEFAULT 5,
  free_spots_exotics integer DEFAULT 5,
  description text,
  max_attendees integer DEFAULT 100,
  CONSTRAINT events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.installment_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  membership_upgrade_id uuid NOT NULL,
  installment_number integer NOT NULL,
  amount numeric NOT NULL,
  due_date timestamp with time zone,
  paypal_order_id character varying,
  paypal_payment_id character varying,
  payment_status character varying DEFAULT 'pending'::character varying,
  paid_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT installment_payments_pkey PRIMARY KEY (id),
  CONSTRAINT installment_payments_membership_upgrade_id_fkey FOREIGN KEY (membership_upgrade_id) REFERENCES public.membership_upgrades(id)
);
CREATE TABLE public.jackpot (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  amount numeric NOT NULL DEFAULT 0.00,
  week_start date NOT NULL,
  week_end date NOT NULL,
  winner_id uuid,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT jackpot_pkey PRIMARY KEY (id),
  CONSTRAINT jackpot_winner_id_fkey FOREIGN KEY (winner_id) REFERENCES public.users(id)
);
CREATE TABLE public.jackpot_config (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  active boolean NOT NULL DEFAULT true,
  fee_percent numeric NOT NULL DEFAULT 0.015,
  fee_fixed numeric NOT NULL DEFAULT 0.55,
  upfront_dime numeric NOT NULL DEFAULT 0.20,
  upfront_referred_dime numeric NOT NULL DEFAULT 0.10,
  jackpot_percent numeric NOT NULL DEFAULT 0.25,
  jackpot_base text NOT NULL DEFAULT 'gross'::text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT jackpot_config_pkey PRIMARY KEY (id)
);
CREATE TABLE public.jackpot_configs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  min_start_amount numeric NOT NULL DEFAULT 4000.00,
  draw_day text NOT NULL DEFAULT 'Saturday'::text,
  draw_cutoff_time time without time zone NOT NULL DEFAULT '00:00:00'::time without time zone,
  time_zone text NOT NULL DEFAULT 'UTC'::text,
  ticket_per_dollar integer NOT NULL DEFAULT 1,
  max_tickets_per_txn integer NOT NULL DEFAULT 5,
  fee_percent numeric NOT NULL DEFAULT 1.500,
  fee_fixed numeric NOT NULL DEFAULT 0.55,
  split_to_dime_percent numeric NOT NULL DEFAULT 20.000,
  split_to_referred_dime_percent numeric NOT NULL DEFAULT 10.000,
  split_to_jackpot_percent numeric NOT NULL DEFAULT 25.000,
  prize_pct_first numeric NOT NULL DEFAULT 25.000,
  prize_pct_second numeric NOT NULL DEFAULT 7.500,
  prize_pct_third numeric NOT NULL DEFAULT 3.750,
  min_prize numeric NOT NULL DEFAULT 1000.00,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT jackpot_configs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.jackpot_draws (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  pool_id uuid,
  drawn_code character NOT NULL CHECK (drawn_code ~ '^[A-Z]{5}$'::text),
  pool_snapshot numeric NOT NULL DEFAULT 0.00,
  executed_at timestamp with time zone NOT NULL DEFAULT now(),
  had_winner boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT jackpot_draws_pkey PRIMARY KEY (id)
);
CREATE TABLE public.jackpot_ledger (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tip_id uuid,
  tipper_id uuid,
  dime_id uuid,
  referred_dime_id uuid,
  gross_amount numeric NOT NULL DEFAULT 0.00,
  fee_percent numeric NOT NULL DEFAULT 1.500,
  fee_fixed numeric NOT NULL DEFAULT 0.55,
  fee_amount numeric NOT NULL DEFAULT 0.00,
  to_dime numeric NOT NULL DEFAULT 0.00,
  to_referred_dime numeric NOT NULL DEFAULT 0.00,
  to_jackpot numeric NOT NULL DEFAULT 0.00,
  to_company numeric NOT NULL DEFAULT 0.00,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT jackpot_ledger_pkey PRIMARY KEY (id),
  CONSTRAINT jackpot_ledger_tipper_id_fkey FOREIGN KEY (tipper_id) REFERENCES public.users(id),
  CONSTRAINT jackpot_ledger_dime_id_fkey FOREIGN KEY (dime_id) REFERENCES public.users(id),
  CONSTRAINT jackpot_ledger_referred_dime_id_fkey FOREIGN KEY (referred_dime_id) REFERENCES public.users(id)
);
CREATE TABLE public.jackpot_pools (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  period_start timestamp with time zone NOT NULL DEFAULT now(),
  period_end timestamp with time zone,
  current_amount numeric NOT NULL DEFAULT 0.00,
  rollover_amount numeric NOT NULL DEFAULT 0.00,
  status text NOT NULL DEFAULT 'open'::text CHECK (status = ANY (ARRAY['open'::text, 'sold_out'::text, 'ready'::text, 'drawn'::text, 'closed'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  max_tickets integer,
  sold_out_at timestamp with time zone,
  sales_resume_at timestamp with time zone,
  guaranteed_draw boolean NOT NULL DEFAULT false,
  CONSTRAINT jackpot_pools_pkey PRIMARY KEY (id)
);
CREATE TABLE public.jackpot_tickets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  tip_id uuid,
  tickets_count integer NOT NULL DEFAULT 1,
  draw_date date NOT NULL DEFAULT jackpot_next_saturday(now()),
  is_winner boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  source text,
  source_transaction_id text,
  ticket_code text,
  tipper_id uuid,
  dime_id uuid,
  referred_dime_id uuid,
  pool_id uuid,
  code character CHECK (code ~ '^[A-Z]{5}$'::text),
  year integer DEFAULT (EXTRACT(year FROM jackpot_next_saturday(now())))::integer,
  tipped_user_id uuid,
  CONSTRAINT jackpot_tickets_pkey PRIMARY KEY (id),
  CONSTRAINT jackpot_tickets_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT jackpot_tickets_tipper_id_fkey FOREIGN KEY (tipper_id) REFERENCES public.users(id),
  CONSTRAINT jackpot_tickets_dime_id_fkey FOREIGN KEY (dime_id) REFERENCES public.users(id),
  CONSTRAINT jackpot_tickets_referred_dime_id_fkey FOREIGN KEY (referred_dime_id) REFERENCES public.users(id),
  CONSTRAINT jackpot_tickets_pool_id_fkey FOREIGN KEY (pool_id) REFERENCES public.jackpot_pools(id)
);
CREATE TABLE public.jackpot_winners (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  username text,
  profile_photo text,
  amount_won numeric,
  draw_date date DEFAULT now(),
  year integer DEFAULT (EXTRACT(year FROM now()))::integer,
  created_at timestamp with time zone DEFAULT now(),
  draw_id uuid,
  role text CHECK (role = ANY (ARRAY['tipper'::text, 'dime'::text, 'referred_dime'::text, 'dime_referred_dime'::text, 'referred_dime_referrer'::text, 'who_referred_tipper'::text])),
  place integer CHECK (place = ANY (ARRAY[1, 2, 3])),
  percentage numeric,
  amount numeric,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'paid'::text, 'void'::text])),
  CONSTRAINT jackpot_winners_pkey PRIMARY KEY (id),
  CONSTRAINT jackpot_winners_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT jackpot_winners_draw_id_fkey FOREIGN KEY (draw_id) REFERENCES public.jackpot_draws(id)
);
CREATE TABLE public.media_comments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  media_id uuid NOT NULL,
  user_id uuid NOT NULL,
  comment_text text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT media_comments_pkey PRIMARY KEY (id),
  CONSTRAINT media_comments_media_id_fkey FOREIGN KEY (media_id) REFERENCES public.user_media(id),
  CONSTRAINT media_comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.media_likes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  media_id uuid NOT NULL,
  user_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT media_likes_pkey PRIMARY KEY (id),
  CONSTRAINT media_likes_media_id_fkey FOREIGN KEY (media_id) REFERENCES public.user_media(id),
  CONSTRAINT media_likes_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.media_replies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  comment_id uuid NOT NULL,
  user_id uuid NOT NULL,
  reply_text text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT media_replies_pkey PRIMARY KEY (id),
  CONSTRAINT media_replies_comment_id_fkey FOREIGN KEY (comment_id) REFERENCES public.media_comments(id),
  CONSTRAINT media_replies_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.membership_limits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  membership_type character varying NOT NULL,
  user_type character varying NOT NULL,
  current_count integer DEFAULT 0,
  max_count integer NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT membership_limits_pkey PRIMARY KEY (id)
);
CREATE TABLE public.membership_upgrades (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  upgrade_type character varying NOT NULL,
  payment_amount numeric NOT NULL,
  payment_method character varying NOT NULL,
  installment_plan boolean DEFAULT false,
  installment_count integer DEFAULT 1,
  installments_paid integer DEFAULT 0,
  paypal_order_id character varying,
  paypal_payment_id character varying,
  phone_number character varying,
  payment_status character varying DEFAULT 'pending'::character varying,
  upgrade_status character varying DEFAULT 'pending'::character varying,
  agreement_sent boolean DEFAULT false,
  agreement_signed boolean DEFAULT false,
  notarization_scheduled boolean DEFAULT false,
  notarization_completed boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  status text,
  CONSTRAINT membership_upgrades_pkey PRIMARY KEY (id),
  CONSTRAINT membership_upgrades_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sender_id uuid NOT NULL,
  recipient_id uuid NOT NULL,
  content text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  is_notification boolean DEFAULT false,
  is_direct_message boolean DEFAULT false,
  media_url text,
  media_type text,
  read_at timestamp without time zone,
  expires_at timestamp without time zone,
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id),
  CONSTRAINT messages_recipient_id_fkey FOREIGN KEY (recipient_id) REFERENCES public.users(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  recipient_id uuid,
  title text NOT NULL,
  message text NOT NULL,
  media_url text,
  media_type character varying CHECK (media_type::text = ANY (ARRAY['photo'::character varying, 'video'::character varying]::text[])),
  is_read boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone DEFAULT (now() + '3 days'::interval),
  user_id uuid,
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT notifications_recipient_id_fkey FOREIGN KEY (recipient_id) REFERENCES public.users(id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  event_id uuid,
  paypal_order_id character varying,
  paypal_payment_id character varying,
  amount numeric NOT NULL,
  currency character varying DEFAULT 'USD'::character varying,
  payment_type character varying NOT NULL,
  payment_status character varying DEFAULT 'pending'::character varying,
  referred_by character varying,
  referrer_commission numeric DEFAULT 0,
  event_host_commission numeric DEFAULT 0,
  platform_fee numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  paypal_transaction_id text,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT payments_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(id)
);
CREATE TABLE public.payout_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  amount numeric NOT NULL,
  payout_method text NOT NULL CHECK (payout_method = ANY (ARRAY['paypal'::text, 'venmo'::text, 'wire'::text, 'direct_deposit'::text, 'check'::text])),
  paypal_email text,
  cashapp_cashtag text,
  cashapp_phone text,
  cashapp_email text,
  wire_bank_name text,
  wire_routing_number text,
  wire_account_number text,
  wire_account_holder_name text,
  wire_account_type text CHECK (wire_account_type = ANY (ARRAY['checking'::text, 'savings'::text])),
  wire_bank_address text,
  wire_swift_code text,
  check_full_name text,
  check_address_line1 text,
  check_address_line2 text,
  check_city text,
  check_state text,
  check_zip_code text,
  check_country text DEFAULT 'United States'::text,
  request_status text DEFAULT 'pending'::text CHECK (request_status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'failed'::text, 'cancelled'::text])),
  request_date timestamp with time zone DEFAULT now(),
  processed_date timestamp with time zone,
  scheduled_payout_date timestamp with time zone,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT payout_requests_pkey PRIMARY KEY (id),
  CONSTRAINT payout_requests_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.paypal_webhook_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id text NOT NULL UNIQUE,
  event_type text,
  received_at timestamp with time zone NOT NULL DEFAULT now(),
  processed_at timestamp with time zone,
  payload jsonb,
  CONSTRAINT paypal_webhook_events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.quarterly_requirements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  quarter integer NOT NULL,
  year integer NOT NULL,
  weekly_referrals_completed integer DEFAULT 0,
  weekly_referrals_required integer DEFAULT 84,
  weekly_content_completed integer DEFAULT 0,
  weekly_content_required integer DEFAULT 168,
  events_attended integer DEFAULT 0,
  events_required integer DEFAULT 3,
  weekly_messages_completed integer DEFAULT 0,
  weekly_messages_required integer DEFAULT 84,
  platform_earnings numeric DEFAULT 0,
  earnings_threshold numeric DEFAULT 12000,
  base_payout numeric DEFAULT 6250,
  deductions numeric DEFAULT 0,
  final_payout numeric DEFAULT 6250,
  payout_status character varying DEFAULT 'pending'::character varying,
  guarantee_active boolean DEFAULT true,
  guarantee_voided_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT quarterly_requirements_pkey PRIMARY KEY (id),
  CONSTRAINT quarterly_requirements_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.ratings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  rater_id uuid,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 100),
  year integer NOT NULL DEFAULT EXTRACT(year FROM now()),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ratings_pkey PRIMARY KEY (id),
  CONSTRAINT ratings_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT ratings_rater_id_fkey FOREIGN KEY (rater_id) REFERENCES public.users(id)
);
CREATE TABLE public.silver_plus_counter (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  current_count integer DEFAULT 0,
  max_count integer DEFAULT 3000,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT silver_plus_counter_pkey PRIMARY KEY (id)
);
CREATE TABLE public.subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  subscription_id text NOT NULL UNIQUE,
  tier text NOT NULL,
  cadence text NOT NULL,
  billing_option text,
  cycles_paid integer NOT NULL DEFAULT 0,
  total_cycles integer,
  status text,
  next_billing_time timestamp with time zone,
  membership_expires_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT subscriptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.tickets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  ticket_number text NOT NULL UNIQUE CHECK (no_duplicate_letters(ticket_number)) NOT VALI),
  tip_id uuid,
  username text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  user_Id uuid,
  CONSTRAINT tickets_pkey PRIMARY KEY (id),
  CONSTRAINT tickets_tip_id_fkey FOREIGN KEY (tip_id) REFERENCES public.tips(id),
  CONSTRAINT tickets_user_Id_fkey FOREIGN KEY (user_Id) REFERENCES public.users(id)
);
CREATE TABLE public.tips (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tipper_username text NOT NULL,
  tipped_username text NOT NULL,
  referrer_username text,
  tip_amount numeric NOT NULL,
  tickets_generated integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  paypal_transaction_id text,
  status text DEFAULT 'completed'::text,
  user_id uuid,
  CONSTRAINT tips_pkey PRIMARY KEY (id),
  CONSTRAINT tips_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.tips_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tipper_user_id uuid,
  tipped_username text NOT NULL,
  tipped_user_id uuid,
  tip_amount numeric NOT NULL,
  message text,
  is_anonymous boolean DEFAULT false,
  payment_method text NOT NULL CHECK (payment_method = ANY (ARRAY['paypal'::text, 'debit_card'::text, 'credit_card'::text])),
  payment_id uuid,
  payment_status text DEFAULT 'pending'::text CHECK (payment_status = ANY (ARRAY['pending'::text, 'completed'::text, 'failed'::text, 'refunded'::text])),
  paypal_order_id text,
  paypal_payment_id text,
  card_payment_intent_id text,
  card_last_four text,
  card_brand text,
  referrer_username text,
  referrer_commission numeric DEFAULT 0,
  tickets_generated integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  CONSTRAINT tips_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT tips_transactions_tipper_user_id_fkey FOREIGN KEY (tipper_user_id) REFERENCES public.users(id),
  CONSTRAINT tips_transactions_tipped_user_id_fkey FOREIGN KEY (tipped_user_id) REFERENCES public.users(id),
  CONSTRAINT tips_transactions_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.payments(id)
);
CREATE TABLE public.user_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  event_id uuid NOT NULL,
  username text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  payment_status character varying DEFAULT 'free'::character varying,
  referred_by character varying,
  payment_id uuid,
  guest_name text,
  CONSTRAINT user_events_pkey PRIMARY KEY (id),
  CONSTRAINT user_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT user_events_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(id),
  CONSTRAINT user_events_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.payments(id)
);
CREATE TABLE public.user_media (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  media_url text NOT NULL,
  media_type character varying NOT NULL CHECK (media_type::text = ANY (ARRAY['photo'::character varying, 'video'::character varying]::text[])),
  filename text,
  file_size bigint,
  storage_path text,
  flagged boolean DEFAULT false,
  warning_message text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  content_tier character varying DEFAULT 'free'::character varying CHECK (content_tier::text = ANY (ARRAY['free'::character varying, 'silver'::character varying, 'gold'::character varying]::text[])),
  is_nude boolean DEFAULT false,
  is_xrated boolean DEFAULT false,
  upload_date timestamp with time zone DEFAULT now(),
  access_restricted boolean DEFAULT false,
  CONSTRAINT user_media_pkey PRIMARY KEY (id),
  CONSTRAINT user_media_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  username character varying NOT NULL UNIQUE,
  email character varying NOT NULL UNIQUE,
  password_hash character varying NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  first_name text,
  last_name text,
  mobile_number text,
  address text,
  city text,
  state text,
  zip text,
  gender text,
  user_type text,
  referred_by text,
  bio text,
  description text,
  occupation text,
  about_me text,
  user_rank integer DEFAULT 0,
  membership_type text DEFAULT 'free'::text,
  tips_earned numeric DEFAULT 0,
  referral_fees numeric DEFAULT 0,
  overrides numeric DEFAULT 0,
  weekly_hours integer DEFAULT 0,
  is_ranked boolean DEFAULT false,
  rank_number integer,
  register_order integer,
  referred_by_photo text,
  profile_photo text,
  banner_photo text,
  front_page_photo text,
  weekly_earnings numeric DEFAULT 0.00,
  lottery_tickets integer DEFAULT 0,
  hash_type character varying DEFAULT 'bcrypt'::character varying,
  paypal_email character varying,
  membership_tier character varying DEFAULT 'free'::character varying,
  likes numeric DEFAULT '0'::numeric,
  liked_by uuid,
  diamond_plus_active boolean DEFAULT false,
  diamond_plus_signed_at timestamp with time zone,
  diamond_plus_payment_id uuid,
  membership_count_position integer,
  phone_number character varying,
  agreement_signed boolean DEFAULT false,
  notarization_completed boolean DEFAULT false,
  silver_plus_active boolean DEFAULT false,
  silver_plus_purchased_at timestamp with time zone,
  silver_plus_payment_id text,
  silver_plus_membership_number integer,
  silver_plus_joined_at timestamp with time zone,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT users_liked_by_fkey FOREIGN KEY (liked_by) REFERENCES public.users(id)
);
CREATE TABLE public.weekly_earnings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  week_start date NOT NULL,
  week_end date NOT NULL,
  amount numeric DEFAULT 0,
  tip_earnings numeric DEFAULT 0,
  referral_earnings numeric DEFAULT 0,
  bonus_earnings numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT weekly_earnings_pkey PRIMARY KEY (id),
  CONSTRAINT weekly_earnings_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);